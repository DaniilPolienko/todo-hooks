{"version":3,"sources":["components/input/Input.js","components/filters/Filters.js","components/listitem/Li.js","components/pagination/Pages.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","handleInputChange","e","key","target","value","trim","alert","preventDefault","handleSubmit","setInput","TextField","onChange","onKeyPress","id","label","variant","Filters","className","Button","onClick","setFilter","filter","color","setOrder","Li","ListItem","divider","Checkbox","checked","todo","handleCheckBoxChecked","idToBeEdited","message","handleEditInputChange","onKeyDown","ListItemText","onDoubleClick","setIdToBeEdited","primary","date","ListItemIcon","handleDeleteOne","Pages","Pagination","changePage","count","Math","ceil","Todos","useState","input","todos","setTodos","editedMessage","setEditedMessage","currentPage","setCurrentPage","open","setOpen","error","setError","order","setCount","API_URL_GET","process","index","itemToBeDeleted","find","el","console","log","makeDeleteRequest","newTodos","currentTodo","checkTask","handleSubmitEdited","editTask","getTasks","a","axios","get","params","page","sort","data","rows","map","item","done","createdAt","uuid","toString","task","post","delete","state","patch","useEffect","makePostRequest","List","Snackbar","autoHideDuration","onClose","Alert","severity","App","appState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7b3bc7f.chunk.js","sourcesContent":["import TextField from \"@material-ui/core/TextField\";\nimport React from \"react\";\n\nexport default function Input(props) {\n  const handleInputChange = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value.trim() === \"\") {\n        alert(\"Поле пусто\");\n      } else {\n        e.preventDefault();\n        props.handleSubmit(e);\n        props.setInput(\"\");\n        e.target.value = \"\";\n      }\n    } else {\n      props.setInput(e.target.value);\n    }\n  };\n  return (\n    <TextField\n      onChange={handleInputChange}\n      onKeyPress={handleInputChange}\n      id=\"outlined-basic\"\n      label=\"Things to be done\"\n      variant=\"outlined\"\n    />\n  );\n}\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport \"./filters.css\";\n\nexport default function Filters(props) {\n  return (\n    <div className=\"filters\">\n      <div className=\"buttons\">\n        <Button\n          onClick={() => props.setFilter(null)}\n          variant={props.filter === null ? \"outlined\" : \"text\"}\n          color=\"primary\"\n        >\n          All\n        </Button>\n        <Button\n          onClick={() => props.setFilter(false)}\n          variant={props.filter === false ? \"outlined\" : \"text\"}\n          color=\"primary\"\n        >\n          Active\n        </Button>\n        <Button\n          onClick={() => props.setFilter(true)}\n          variant={props.filter === true ? \"outlined\" : \"text\"}\n          color=\"primary\"\n        >\n          Done\n        </Button>\n      </div>\n      <div className=\"arrows\">\n        <p className=\"datesort\">Sort by date</p>\n        <ArrowUpwardIcon\n          onClick={() => props.setOrder(\"desc\")}\n          className=\"arrow\"\n        />\n        <ArrowDownwardIcon\n          onClick={() => props.setOrder(\"asc\")}\n          className=\"arrow\"\n        />\n      </div>\n    </div>\n  );\n}\n","import ListItemText from \"@material-ui/core/ListItemText\";\nimport { Checkbox } from \"@material-ui/core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./listitem.css\";\n\nexport default function Li(props) {\n  return (\n    <ListItem className=\"listitem\" divider>\n      <Checkbox\n        checked={props.todo.checked}\n        onChange={(e) => props.handleCheckBoxChecked(e, props.todo.id)}\n      />\n\n      {props.idToBeEdited === props.todo.id ? (\n        <TextField\n          label={props.todo.message}\n          onChange={props.handleEditInputChange}\n          onKeyDown={props.handleEditInputChange}\n          id=\"standard-basic\"\n        />\n      ) : (\n        <ListItemText\n          onDoubleClick={() => props.setIdToBeEdited(props.todo.id)}\n          primary={props.todo.message}\n        />\n      )}\n\n      <p>{props.todo.date}</p>\n      <ListItemIcon>\n        <ClearIcon\n          className=\"delete\"\n          onClick={(e) => props.handleDeleteOne(e, props.todo.id)}\n        />\n      </ListItemIcon>\n    </ListItem>\n  );\n}\n","import Pagination from \"@material-ui/lab/Pagination\";\nimport React from \"react\";\nimport \"./pages.css\";\n\nexport default function Pages(props) {\n  return (\n    <Pagination\n      onChange={props.changePage}\n      className=\"pages\"\n      count={Math.ceil(props.count / 5)}\n      color=\"primary\"\n    />\n  );\n}\n","import List from \"@material-ui/core/List\";\nimport React, { useState, useEffect } from \"react\";\nimport Input from \"./input/Input\";\nimport Filters from \"./filters/Filters\";\nimport Li from \"./listitem/Li\";\nimport Pages from \"./pagination/Pages\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\n\nexport default function Todos(props) {\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [idToBeEdited, setIdToBeEdited] = useState(-1);\n  const [editedMessage, setEditedMessage] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [order, setOrder] = useState(\"asc\");\n  const [count, setCount] = useState(1);\n  const API_URL_GET = process.env.REACT_APP_API_GET;\n  const handleSubmit = (e) => {\n    makePostRequest();\n  };\n\n  const handleDeleteOne = (e, index) => {\n    const itemToBeDeleted = todos.find((el) => el.id === index);\n    console.log(itemToBeDeleted);\n    makeDeleteRequest(itemToBeDeleted);\n  };\n\n  const handleCheckBoxChecked = (e, index) => {\n    const newTodos = [...todos];\n    const currentTodo = newTodos.find((el) => el.id === index);\n    currentTodo.checked = e.target.checked;\n\n    checkTask(currentTodo, e.target.checked);\n    setTodos([...newTodos]);\n  };\n\n  const handleEditInputChange = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value.trim() === \"\") {\n        alert(\"Поле пусто\");\n      } else {\n        e.preventDefault();\n        handleSubmitEdited();\n      }\n    } else {\n      if (e.key === \"Escape\") {\n        setIdToBeEdited(-1);\n      } else {\n        setEditedMessage(e.target.value);\n      }\n    }\n  };\n\n  const handleSubmitEdited = () => {\n    const newTodos = [...todos];\n    const currentTodo = newTodos.find((el) => el.id === idToBeEdited);\n    currentTodo.message = editedMessage;\n\n    editTask(currentTodo, editedMessage, \"name\");\n    setIdToBeEdited(-1);\n  };\n\n  const changePage = (e, page) => {\n    setCurrentPage(page);\n  };\n\n  async function getTasks() {\n    try {\n      const { data } = await axios.get(API_URL_GET, {\n        params: {\n          page: currentPage,\n          filter: filter,\n          sort: order,\n        },\n      });\n      console.log(data);\n      setTodos(\n        data.rows.map((item, index) => ({\n          id: index,\n          message: item.message,\n          checked: item.done,\n          date: item.createdAt,\n          uuid: item.id,\n        }))\n      );\n      console.log(data.count);\n      setCount(data.count);\n    } catch (err) {\n      setOpen(true);\n      setError(err.toString());\n    }\n  }\n\n  async function makePostRequest() {\n    try {\n      const task = { message: input };\n      await axios.post(process.env.REACT_APP_API + \"/item\", task);\n      getTasks(currentPage);\n      setOpen(false);\n    } catch (err) {\n      setOpen(true);\n      setError(err.toString());\n    }\n  }\n\n  async function makeDeleteRequest(itemToBeDeleted) {\n    try {\n      await axios.delete(\n        process.env.REACT_APP_API + \"/item/\" + itemToBeDeleted.uuid\n      );\n\n      getTasks(currentPage);\n    } catch (err) {\n      setOpen(true);\n      setError(err.toString());\n    }\n  }\n\n  async function checkTask(task, state) {\n    try {\n      await axios.patch(process.env.REACT_APP_API + \"/item/\" + task.uuid, {\n        done: state,\n      });\n      getTasks(currentPage);\n    } catch (err) {\n      setOpen(true);\n      setError(err.toString());\n    }\n  }\n\n  async function editTask(task, state) {\n    try {\n      await axios.patch(process.env.REACT_APP_API + \"/item/\" + task.uuid, {\n        message: state,\n      });\n    } catch (err) {\n      setOpen(true);\n      setError(err.toString());\n    }\n  }\n\n  useEffect(() => {\n    getTasks(currentPage);\n  }, []);\n\n  useEffect(() => {\n    getTasks(currentPage);\n  }, [currentPage, filter, order]);\n\n  return (\n    <>\n      <Input handleSubmit={handleSubmit} setInput={setInput} />\n      <Filters\n        filter={filter}\n        setOrder={setOrder}\n        getTasks={getTasks}\n        setFilter={setFilter}\n      />\n\n      <List>\n        {todos.map((todo) => (\n          <Li\n            todo={todo}\n            handleCheckBoxChecked={handleCheckBoxChecked}\n            idToBeEdited={idToBeEdited}\n            handleEditInputChange={handleEditInputChange}\n            setIdToBeEdited={setIdToBeEdited}\n            handleDeleteOne={handleDeleteOne}\n            key={todo.id}\n          />\n        ))}\n      </List>\n\n      <Pages changePage={changePage} count={count} />\n\n      <Snackbar\n        open={open}\n        autoHideDuration={5000}\n        onClose={() => setOpen(false)}\n      >\n        <Alert onClose={() => setOpen(false)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n","import React, {useState, useEffect} from 'react'\nimport Todos from './components/Todos.js'\n\nimport './App.css';\nimport './components/Styles.css'\n\nfunction App(props) {\n  const [appState, setAppState] = useState();\n\n//   useEffect(() => {\n//     const apiUrl = 'https://todo-api-learning.herokuapp.com/';\n//     axios.get(apiUrl).then((resp) => {\n//       const allPersons = resp.data;\n//       setAppState(allPersons);\n//     });\n//   }, [setAppState]);\n\n\n//   async function makeGetRequest() {\n\n//     let task = { name: 'John Doe', done: true };\n\n//     let res = await axios.post('https://todo-api-learning.herokuapp.com/v1/task/{1}', task);\n\n//     let data = res.data;\n//     console.log(data);\n// }\n//   useEffect(()=> {\n//     makeGetRequest();\n//   },[])\n  \n\n\n\n  console.log(appState)\n\n  return (\n    <section className=\"section\">\n      <Todos/>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}