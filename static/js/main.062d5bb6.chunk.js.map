{"version":3,"sources":["components/input/Input.js","components/filters/Filters.js","components/listitem/Li.js","components/pagination/Pages.js","components/Todos.js","components/Auth.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["Input","handleSubmit","setInput","setError","setOpen","handleInputChange","e","key","target","value","trim","preventDefault","TextField","onChange","onKeyPress","id","label","variant","Filters","setFilter","setOrder","filter","className","Button","onClick","color","Li","todo","handleSubmitCard","handleDelete","handleCheckBoxChecked","useState","isEditing","setIsEditing","handleEditInputChange","alert","message","ListItem","divider","Checkbox","checked","done","autoFocus","onBlur","onKeyDown","ListItemText","onDoubleClick","primary","date","ListItemIcon","Pages","changePage","count","Pagination","Math","ceil","Todos","input","todos","setTodos","currentPage","setCurrentPage","open","error","order","setCount","redirect","setRedirect","name","setName","jwt","require","token","localStorage","getItem","API_URL_GET","process","axios","defaults","baseURL","headers","common","a","method","url","params","getTasks","newTodos","find","el","editTask","get","page","sort","data","rows","map","item","index","createdAt","uuid","task","interceptors","response","use","errors","Promise","reject","useEffect","payload","verify","firstName","to","Link","href","removeItem","makePostRequest","List","Snackbar","autoHideDuration","onClose","Alert","severity","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","SignIn","classes","email","setEmail","password","setPassword","user","setItem","Container","component","maxWidth","CssBaseline","noValidate","onSubmit","loginUser","required","fullWidth","autoComplete","type","Grid","container","config","avatar","backgroundColor","palette","secondary","main","SignUp","setFirstName","secondName","setSecondName","success","setSuccess","lastName","postUser","xs","sm","justify","App","props","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.062d5bb6.chunk.js","sourcesContent":["import TextField from \"@material-ui/core/TextField\";\nimport React from \"react\";\n\nexport default function Input({ handleSubmit, setInput, setError, setOpen }) {\n  const handleInputChange = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value.trim() === \"\") {\n        setError(\"Поле пусто\");\n        setOpen(true);\n      } else {\n        e.preventDefault();\n        handleSubmit(e);\n        setInput(\"\");\n        e.target.value = \"\";\n      }\n    } else {\n      setInput(e.target.value);\n    }\n  };\n  return (\n    <TextField\n      onChange={handleInputChange}\n      onKeyPress={handleInputChange}\n      id=\"outlined-basic\"\n      label=\"Things to be done\"\n      variant=\"outlined\"\n    />\n  );\n}\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport \"./filters.css\";\n\nexport default function Filters({ setFilter, setOrder, filter }) {\n  return (\n    <div className=\"filters\">\n      <div className=\"buttons\">\n        <Button\n          onClick={() => setFilter(null)}\n          variant={filter === null ? \"outlined\" : \"text\"}\n          color=\"primary\"\n        >\n          All\n        </Button>\n        <Button\n          onClick={() => setFilter(false)}\n          variant={filter === false ? \"outlined\" : \"text\"}\n          color=\"primary\"\n        >\n          Active\n        </Button>\n        <Button\n          onClick={() => setFilter(true)}\n          variant={filter === true ? \"outlined\" : \"text\"}\n          color=\"primary\"\n        >\n          Done\n        </Button>\n      </div>\n      <div className=\"arrows\">\n        <p className=\"datesort\">Sort by date</p>\n        <ArrowUpwardIcon onClick={() => setOrder(\"desc\")} className=\"arrow\" />\n        <ArrowDownwardIcon onClick={() => setOrder(\"asc\")} className=\"arrow\" />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Checkbox } from \"@material-ui/core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./listitem.css\";\n\nexport default function Li({\n  todo,\n  handleSubmitCard,\n  handleDelete,\n  handleCheckBoxChecked,\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEditInputChange = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value.trim() === \"\") {\n        return alert(\"Поле пусто\");\n      } else {\n        e.preventDefault();\n        setIsEditing(false);\n        return handleSubmitCard({ id: todo.id, message: e.target.value });\n      }\n    }\n    if (e.key === \"Escape\") setIsEditing(false);\n  };\n\n  return (\n    <ListItem className=\"listitem\" divider>\n      <Checkbox\n        checked={todo.checked}\n        onChange={(e) =>\n          handleCheckBoxChecked(e, { id: todo.id, done: e.target.checked })\n        }\n      />\n\n      {isEditing ? (\n        <TextField\n          autoFocus\n          onBlur={() => setIsEditing(false)}\n          label={todo.message}\n          onChange={handleEditInputChange}\n          onKeyDown={handleEditInputChange}\n          id=\"standard-basic\"\n        />\n      ) : (\n        <ListItemText\n          onDoubleClick={() => setIsEditing(true)}\n          primary={todo.message}\n        />\n      )}\n\n      <p>{todo.date}</p>\n      <ListItemIcon>\n        <ClearIcon className=\"delete\" onClick={(e) => handleDelete(todo.id)} />\n      </ListItemIcon>\n    </ListItem>\n  );\n}\n","import Pagination from \"@material-ui/lab/Pagination\";\nimport React from \"react\";\nimport \"./pages.css\";\n\nexport default function Pages({ changePage, count }) {\n  return (\n    <Pagination\n      onChange={changePage}\n      className=\"pages\"\n      count={Math.ceil(count / 5)}\n      color=\"primary\"\n    />\n  );\n}\n","import List from \"@material-ui/core/List\";\nimport React, { useState, useEffect } from \"react\";\nimport Input from \"./input/Input\";\nimport Filters from \"./filters/Filters\";\nimport Li from \"./listitem/Li\";\nimport Pages from \"./pagination/Pages\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\nimport Link from \"@material-ui/core/Link\";\nimport \"./Styles.css\";\nimport { Redirect } from \"react-router\";\n\nexport default function Todos() {\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [order, setOrder] = useState(\"asc\");\n  const [count, setCount] = useState(1);\n  const [redirect, setRedirect] = useState(false);\n  const [name, setName] = useState(\"\");\n  const jwt = require(\"jsonwebtoken\");\n  const token = localStorage.getItem(\"token\");\n  const API_URL_GET = process.env.REACT_APP_API_GET;\n  axios.defaults.baseURL = process.env.REACT_APP_API;\n  axios.defaults.headers.common[\"Authorization\"] = token;\n\n  const handleSubmit = (e) => {\n    makePostRequest();\n  };\n\n  const handleDelete = async (id) => {\n    await axios({\n      method: \"delete\",\n      url: \"/item\",\n      params: { id },\n    });\n    getTasks(currentPage);\n  };\n\n  const handleCheckBoxChecked = (e, todo) => {\n    const newTodos = [...todos];\n    const currentTodo = newTodos.find((el) => el.id === todo.id);\n    currentTodo.checked = e.target.checked;\n\n    editTask(todo);\n    setTodos([...newTodos]);\n  };\n\n  const handleSubmitCard = (todo) => {\n    const newTodos = [...todos];\n    const currentTodo = newTodos.find((el) => el.id === todo.id);\n    currentTodo.message = todo.message;\n\n    editTask(todo);\n    setTodos([...newTodos]);\n  };\n\n  const changePage = (e, page) => {\n    setCurrentPage(page);\n  };\n\n  async function getTasks() {\n    const { data } = await axios.get(API_URL_GET, {\n      params: {\n        page: currentPage,\n        filter: filter,\n        sort: order,\n      },\n    });\n    setTodos(\n      data.rows.map((item, index) => ({\n        message: item.message,\n        checked: item.done,\n        date: item.createdAt,\n        id: item.id,\n        uuid: item.uuid,\n      }))\n    );\n    setCount(data.count);\n  }\n\n  async function makePostRequest() {\n    await axios({\n      method: \"post\",\n      url: \"/item\",\n      data: {\n        message: input,\n      },\n    });\n    getTasks(currentPage);\n    setOpen(false);\n  }\n\n  async function editTask(task) {\n    try {\n      await axios({\n        method: \"patch\",\n        url: \"/item\",\n        data: {\n          task,\n        },\n      });\n      getTasks(currentPage);\n    } catch (error) {\n      getTasks(currentPage);\n    }\n  }\n\n  axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      if (error) {\n        setError(error.response.data.error || error.response.data.errors);\n        setOpen(true);\n        if (\n          error.response.data.error === \"jwt expired\" ||\n          error.response.data.error === \"jwt must be provided\" ||\n          error.response.data.error === \"Access Denied\"\n        ) {\n          setRedirect(true);\n        }\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    getTasks(currentPage);\n  }, [currentPage, filter, order]);\n\n  useEffect(() => {\n    try {\n      const payload = jwt.verify(token, process.env.REACT_APP_SECRET);\n      setName(payload.firstName);\n    } catch (error) {\n      setRedirect(true);\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to=\"/#/auth\" />;\n  }\n  return (\n    <>\n      <p className=\"logout\">{name}</p>\n      <Link\n        className=\"logout\"\n        href=\"/auth\"\n        variant=\"body2\"\n        onClick={() => localStorage.removeItem(\"token\")}\n      >\n        {\"Log out\"}\n      </Link>\n      <Input\n        handleSubmit={handleSubmit}\n        setInput={setInput}\n        setError={setError}\n        setOpen={setOpen}\n      />\n      <Filters\n        filter={filter}\n        setOrder={setOrder}\n        getTasks={getTasks}\n        setFilter={setFilter}\n      />\n\n      <List>\n        {todos.map((todo) => (\n          <Li\n            todo={todo}\n            handleCheckBoxChecked={handleCheckBoxChecked}\n            handleSubmitCard={handleSubmitCard}\n            handleDelete={handleDelete}\n            key={todo.id}\n          />\n        ))}\n      </List>\n      {(currentPage === 1) & (count < 6) ? (\n        <div></div>\n      ) : (\n        <Pages changePage={changePage} count={count} />\n      )}\n      <Snackbar\n        open={open}\n        autoHideDuration={5000}\n        onClose={() => setOpen(false)}\n      >\n        <Alert onClose={() => setOpen(false)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [redirect, setRedirect] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState();\n  const [open, setOpen] = useState(false);\n  const jwt = require(\"jsonwebtoken\");\n  axios.defaults.baseURL = process.env.REACT_APP_API;\n  const handleInputChange = (e, setInput) => {\n    setInput(e.target.value);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      const payload = jwt.verify(token, process.env.REACT_APP_SECRET);\n      if (payload) setRedirect(true);\n    } catch (error) {\n      return <Redirect to=\"/#/auth\" />;\n    }\n  }, []);\n\n  async function loginUser(e) {\n    e.preventDefault();\n    try {\n      const user = await axios({\n        method: \"post\",\n        url: \"/login\",\n        data: {\n          email: email,\n          password: password,\n        },\n      });\n\n      localStorage.setItem(\"token\", user.data.token);\n      setRedirect(true);\n    } catch (err) {}\n  }\n  if (redirect) {\n    return <Redirect to=\"/#/todos\" />;\n  }\n\n  axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      if (error) {\n        setError(error.response.data.error || error.response.data.errors);\n        setOpen(true);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  if (redirect) {\n    return <Redirect to=\"/#/todos\" />;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={(e) => loginUser(e)}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => handleInputChange(e, setEmail)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => handleInputChange(e, setPassword)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/#/signup\" variant=\"body2\">\n                {\"Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        open={open}\n        autoHideDuration={5000}\n        onClose={() => setOpen(false)}\n      >\n        <Alert onClose={() => setOpen(false)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nrequire(\"dotenv\").config();\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState(\"\");\n  const [secondName, setSecondName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState();\n  const [open, setOpen] = useState(false);\n  const [success, setSuccess] = useState(false);\n  axios.defaults.baseURL = process.env.REACT_APP_API;\n  const handleInputChange = (e, setInput) => {\n    setInput(e.target.value);\n  };\n\n  async function postUser(e) {\n    e.preventDefault();\n    try {\n      const user = await axios({\n        method: \"post\",\n        url: \"/signup\",\n        data: {\n          firstName: firstName,\n          lastName: secondName,\n          email: email,\n          password: password,\n        },\n      });\n      localStorage.setItem(\"token\", user.data.token);\n      setSuccess(true);\n    } catch (err) {\n      setError(err);\n      setOpen(true);\n    }\n  }\n\n  if (success) {\n    return <Redirect to=\"/#/todos\" />;\n  }\n\n  axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      if (error) {\n        setError(error.response.data.error || error.response.data.errors);\n        setOpen(true);\n      }\n      return Promise.reject(error);\n    }\n  );\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate onSubmit={(e) => postUser(e)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={(e) => handleInputChange(e, setFirstName)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={(e) => handleInputChange(e, setSecondName)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(e) => handleInputChange(e, setEmail)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => handleInputChange(e, setPassword)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/auth\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        open={open}\n        autoHideDuration={5000}\n        onClose={() => setOpen(false)}\n      >\n        <Alert onClose={() => setOpen(false)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Todos from \"./components/Todos.js\";\nimport Auth from \"./components/Auth.js\";\nimport SignUp from \"./components/SignUp.js\";\nimport {\n  HashRouter,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport \"./components/Styles.css\";\n\nfunction App(props) {\n  return (\n    <HashRouter basename=\"/todos\">\n      <Router>\n        <section className=\"section\">\n          <Switch>\n            <Route exact path=\"/todos\">\n              <Todos />\n            </Route>\n            <Route path=\"/auth\">\n              <Auth />\n            </Route>\n            <Route path=\"/signup\">\n              <SignUp />\n            </Route>\n          </Switch>\n        </section>\n      </Router>\n    </HashRouter>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}