{"version":3,"sources":["components/input/Input.js","components/filters/Filters.js","components/listitem/Li.js","components/pagination/Pages.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","handleInputChange","e","key","target","value","trim","alert","preventDefault","handleSubmit","setInput","TextField","onChange","onKeyPress","id","label","variant","Filters","className","Button","onClick","filterTodos","filter","color","setOrder","Li","ListItem","divider","Checkbox","checked","todoChecked","handleCheckBoxChecked","todoId","idToBeEdited","todoMessage","handleEditInputChange","onKeyDown","ListItemText","onDoubleClick","setIdToBeEdited","primary","todoDate","ListItemIcon","handleDeleteOne","Pages","Pagination","changePage","count","countPages","Todos","useState","input","todos","setTodos","filteredTodos","setFilteredTodos","setFilter","editedMessage","setEditedMessage","currentPage","setCurrentPage","open","setOpen","error","setError","order","filterType","newTodos","slice","item","index","makeDeleteRequest","find","el","currentTodo","checkTask","handleSubmitEdited","message","editTask","Math","ceil","length","getTasks","a","axios","get","process","data","map","name","done","date","createdAt","uuid","toString","task","post","itemToBeDeleted","delete","state","patch","useEffect","console","log","makePostRequest","List","todo","savedTodos","page","Snackbar","autoHideDuration","onClose","Alert","severity","App","appState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc1e304e.chunk.js","sourcesContent":["import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\n\n\nexport default function Input(props) {\n    const handleInputChange = (e) => {\n        if (e.key === \"Enter\") {\n          if(e.target.value.trim() === \"\") {\n            alert(\"Поле пусто\") \n          }\n          else {\n            e.preventDefault();\n            props.handleSubmit(e);\n            props.setInput(\"\")\n            e.target.value = \"\"\n          }\n        }\n          else {\n            props.setInput(e.target.value)\n          }\n      };\n    return (\n     <TextField onChange={handleInputChange} onKeyPress={handleInputChange} id=\"outlined-basic\" label=\"Things to be done\" variant=\"outlined\" />\n    );\n  }","import Button from '@material-ui/core/Button';\nimport React from 'react';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport \"./filters.css\";\n\n\nexport default function Filters(props) {\n   \n\n\n      \n    return (\n        <div className =\"filters\">\n          <div className = \"buttons\">\n            <Button\n            onClick = {() => props.filterTodos(\"all\")}\n            variant={props.filter === \"all\" ? \"outlined\" : \"text\"}\n            color=\"primary\">All</Button>\n            <Button\n            onClick = {() =>props.filterTodos(\"active\")}\n            variant={props.filter === \"active\" ? \"outlined\" : \"text\"}\n            color=\"primary\">Active</Button>\n            <Button\n            onClick = {() =>props.filterTodos(\"done\")}\n            variant={props.filter === \"done\" ? \"outlined\" : \"text\"} \n            color=\"primary\">Done</Button>\n          </div>\n          <div className = \"arrows\">\n            <p className = \"datesort\">Sort by date</p>\n            <ArrowUpwardIcon\n              onClick = {() => props.setOrder(\"desc\")}\n              className =\"arrow\"/>\n            <ArrowDownwardIcon\n                onClick = {() => props.setOrder(\"asc\")}\n              className =\"arrow\"/>\n          </div>\n        </div>\n    );\n  }","import React, {useState, useEffect} from 'react';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Checkbox } from '@material-ui/core';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport \"./listitem.css\";\n\nexport default function Li(props) {\n\n\n  \n\n    return (\n    <ListItem\n              className=\"listitem\"\n              divider \n            \n    >\n                <Checkbox\n                   checked = {props.todoChecked}\n                   onChange={(e) => props.handleCheckBoxChecked(e, props.todoId)}/>\n                \n                {props.idToBeEdited === props.todoId ? (\n                 <TextField\n                  label={props.todoMessage}\n                  onChange = {props.handleEditInputChange}\n                  onKeyDown = {props.handleEditInputChange}\n                  id=\"standard-basic\" \n                   />\n                ) : (\n                  <ListItemText\n                  onDoubleClick = {() => props.setIdToBeEdited(props.todoId)} \n                  primary ={props.todoMessage}\n                />\n                )}\n                \n                <p>{props.todoDate}</p>\n                 <ListItemIcon>\n                    <ClearIcon\n                      className=\"delete\"\n                      onClick={(e) => props.handleDeleteOne(e, props.todoId)}\n                    />\n                  </ListItemIcon>\n                  \n    </ListItem>\n    );\n  }","import Pagination from '@material-ui/lab/Pagination';\nimport React from 'react';\nimport \"./pages.css\";\n\nexport default function Pages(props) {\n\n\n    \n    return (\n        <Pagination\n            onChange = {props.changePage}\n            className = \"pages\"\n            count={props.countPages} \n            color=\"primary\" />\n            \n    );\n  }","import List from '@material-ui/core/List';\nimport React, { useState, useEffect } from 'react';\nimport Input from './input/Input';\nimport Filters from './filters/Filters'\nimport Li from './listitem/Li'\nimport Pages from './pagination/Pages'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport axios from 'axios'\n\nexport default function Todos(props) {\nconst [input, setInput]=useState(\"\")\nconst [todos, setTodos]=useState([])\nconst [filteredTodos, setFilteredTodos] = useState([])\nconst [filter, setFilter]=useState(\"all\")\nconst [idToBeEdited, setIdToBeEdited] = useState(-1)\nconst [editedMessage, setEditedMessage] = useState(\"\")\nconst [currentPage, setCurrentPage] = useState(1)\nconst [open, setOpen] = useState(false);\nconst [error, setError] = useState(\"\")\nconst [order, setOrder] = useState(\"asc\")\n\nconst handleSubmit = ((e) => {\n    makePostRequest();\n});\n\n  const handleClearCompleted = () => {\n    const newTodos = [...todos]\n    const savedTodos = newTodos.filter(item => item.checked === false)\n    setTodos([...savedTodos])\n  }\n\n  const filterTodos = (filterType) => {\n    let newTodos = [...todos]\n    switch(filterType) {\n      case \"all\":\n        setFilteredTodos([...todos.slice((currentPage - 1) * 5, (currentPage - 1) * 5 + 5)])\n        setFilter(\"all\")\n\n        break;\n      case \"active\":\n        setFilteredTodos(newTodos.filter(item => item.checked === false).slice((currentPage - 1) * 5, (currentPage - 1) * 5 + 5))\n        setFilter(\"active\")\n        filterTodos()\n\n        break;\n      case \"done\":\n        setFilteredTodos(newTodos.filter(item=> item.checked === true).slice((currentPage - 1) * 5, (currentPage - 1) * 5 + 5))\n        setFilter(\"done\")\n        filterTodos()\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDeleteOne = (e, index) => {\n    const itemToBeDeleted = todos.find(el => el.id === index)\n      makeDeleteRequest(itemToBeDeleted)\n   }\n\n\n   const handleCheckBoxChecked = (e, index) => {\n    const newTodos = [...todos]\n    const currentTodo = newTodos.find(el => el.id === index)\n    currentTodo.checked = e.target.checked\n\n    checkTask(currentTodo, e.target.checked)\n    setTodos([...newTodos])\n  }\n\n  \n\n  const handleEditInputChange = (e) => {\n    if (e.key === \"Enter\") {\n      if(e.target.value.trim() === \"\") {\n        alert(\"Поле пусто\") \n      }\n      else {\n        e.preventDefault();\n        handleSubmitEdited();\n      }\n    }\n    else {\n      if (e.key === \"Escape\") {\n        setIdToBeEdited(-1)\n      }\n      else {\n      setEditedMessage(e.target.value)\n      }\n    }\n  }\n\n  const handleSubmitEdited = () => {\n    const newTodos = [...todos]\n    const currentTodo = newTodos.find(el => el.id === idToBeEdited)\n    currentTodo.message = editedMessage\n\n\n    editTask(currentTodo, editedMessage, \"name\")\n    setIdToBeEdited(-1)\n  }\n\n  const changePage = (e, page) => {\n      setCurrentPage(page)\n  }\n\n  const countPages = (filterType) => {\n      switch (filterType) {\n        case \"all\":\n          return Math.ceil(todos.length / 5)\n        case \"active\":\n          return Math.ceil(todos.filter(item => item.checked === false).length / 5)\n        case \"done\":\n          return Math.ceil(todos.filter(item => item.checked === true).length / 5)\n        default:\n          break;\n      }\n  }\n\n  async function getTasks(order) {\n    try {\n    const {data} = await axios.get(process.env.REACT_APP_API + '/items?sort=' + order );\n    setTodos(data.map((item, index) => ( {id: index, message: item.name, checked: item.done, date: item.createdAt, uuid: item.uuid})))\n    }\n    catch(err) {\n      setOpen(true)\n      setError(err.toString())\n    }\n  }\n\n    async function makePostRequest() {\n        try {\n            const task = { name: input, done: false };\n            await axios.post(process.env.REACT_APP_API + '/item', task);\n            getTasks(order)\n            setOpen(false)\n        }\n        catch(err) {\n            setOpen(true)\n            setError(err.toString())\n        }\n    }\n\n    async function makeDeleteRequest(itemToBeDeleted) {\n        try {\n            await axios.delete(process.env.REACT_APP_API + '/item/' + itemToBeDeleted.uuid);\n    \n            getTasks(order)\n        }\n        catch(err) {\n            setOpen(true)\n            setError(err.toString())\n        }\n    }\n\n  async function checkTask(task, state) {\n    try {\n  await axios.patch(process.env.REACT_APP_API + '/item/' + task.uuid,\n\t{ \n\t\tdone: state\n\t}, \n);\n    }\n    catch(err) {\n      setOpen(true)\n      setError(err.toString())\n    }\n  }\n\n  async function editTask(task, state) {\n    try {\n    await axios.patch(process.env.REACT_APP_API + '/item/' + task.uuid,\n    { \n      name: state\n    }, \n  );\n    }\n    catch(err) {\n      setOpen(true)\n      setError(err.toString())\n    }\n    }\n\n\n\n  \nuseEffect(() => {\n    filterTodos(filter);\n   }, [todos])\n\n   useEffect(() => {\n    filterTodos(filter);\n   }, [currentPage])\n\n   useEffect(() => {\n    filterTodos(filter);\n   }, [filter])\n\n   useEffect(() => {\n    countPages(filter)\n    console.log(todos)\n   }, [filter])\n\n    useEffect(() => {\n        getTasks(order)\n    }, [order])\n\n    useEffect(() => {\n     getTasks(order)\n    }, [])\n\n\n\n    \n\n\n  return (\n    <>\n        <Input \n          handleSubmit = {handleSubmit}\n          setInput = {setInput}\n       />\n        <Filters\n          filter = {filter}\n          setFilteredTodos = {setFilteredTodos}\n          filteredTodos = {filteredTodos}\n          filterTodos = {filterTodos}\n          setOrder = {setOrder}\n        />\n\n        <List>\n        {filteredTodos.map((todo) => (\n            <Li\n              todoId = {todo.id}\n              handleCheckBoxChecked = {handleCheckBoxChecked}\n              todoChecked = {todo.checked}\n              idToBeEdited = {idToBeEdited}\n              todoMessage = {todo.message}\n              handleEditInputChange = {handleEditInputChange}\n              setIdToBeEdited = {setIdToBeEdited}\n              todoDate = {todo.date}\n              handleDeleteOne = {handleDeleteOne}\n              key = {todo.id}\n            />\n        ))}\n        </List>\n        <p \n          className=\"clear\"\n          onClick={handleClearCompleted}\n          >clear completed</p>\n\n        <Pages\n   \n          changePage = {changePage}\n          countPages = {countPages(filter)}\n        />\n\n      <Snackbar open={open} autoHideDuration={5000} onClose = {()=>setOpen(false)}>\n        <Alert  onClose = {()=> setOpen(false)} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n    </>\n    );\n\n  }\n\n","import React, {useState, useEffect} from 'react'\nimport Todos from './components/Todos.js'\n\nimport './App.css';\nimport './components/Styles.css'\n\nfunction App(props) {\n  const [appState, setAppState] = useState();\n\n//   useEffect(() => {\n//     const apiUrl = 'https://todo-api-learning.herokuapp.com/';\n//     axios.get(apiUrl).then((resp) => {\n//       const allPersons = resp.data;\n//       setAppState(allPersons);\n//     });\n//   }, [setAppState]);\n\n\n//   async function makeGetRequest() {\n\n//     let task = { name: 'John Doe', done: true };\n\n//     let res = await axios.post('https://todo-api-learning.herokuapp.com/v1/task/{1}', task);\n\n//     let data = res.data;\n//     console.log(data);\n// }\n//   useEffect(()=> {\n//     makeGetRequest();\n//   },[])\n  \n\n\n\n  console.log(appState)\n\n  return (\n    <section className=\"section\">\n      <Todos/>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}